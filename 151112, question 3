class Employee:
    def __init__(self, name, employee_id, salary):
        self.name = name
        self.employee_id = employee_id
        self.salary = salary

    def display_details(self):
        print(f"Employee ID: {self.employee_id}")
        print(f"Name: {self.name}")
        print(f"Salary: ${self.salary:.2f}")

    def update_salary(self, new_salary):
        self.salary = new_salary
        print(f"Updated salary for {self.name} to ${self.salary:.2f}")



class Department:
    def __init__(self, department_name):
        self.department_name = department_name
        self.employees = []

    def add_employee(self, employee):
        self.employees.append(employee)
        print(f"Added {employee.name} to {self.department_name} department.")

    def total_salary_expenditure(self):
        total = sum(emp.salary for emp in self.employees)
        print(f"Total salary expenditure for {self.department_name}: ${total:.2f}")
        return total

    def display_all_employees(self):
        if not self.employees:
            print("No employees in this department yet.")
        else:
            print(f"\nEmployees in {self.department_name} Department:")
            for emp in self.employees:
                emp.display_details()
                print("-" * 30)



dept_name = input("Enter department name: ")
department = Department(dept_name)


def department_menu():
    while True:
        print("\nDepartment Management Menu")
        print("1. Add an employee")
        print("2. Update employee salary")
        print("3. Display all employees")
        print("4. Show total salary expenditure")
        print("5. Exit")

        choice = input("Enter your choice (1-5): ")

        if choice == '1':
            name = input("Enter employee name: ")
            emp_id = input("Enter employee ID: ")
            try:
                salary = float(input("Enter employee salary: "))
                new_employee = Employee(name, emp_id, salary)
                department.add_employee(new_employee)
            except ValueError:
                print("Invalid salary input. Please enter a number.")

        elif choice == '2':
            emp_id = input("Enter employee ID to update salary: ")
            emp = next((e for e in department.employees if e.employee_id == emp_id), None)
            if emp:
                try:
                    new_salary = float(input("Enter new salary: "))
                    emp.update_salary(new_salary)
                except ValueError:
                    print("Invalid input. Salary must be a number.")
            else:
                print("Employee not found.")

        elif choice == '3':
            department.display_all_employees()

        elif choice == '4':
            department.total_salary_expenditure()

        elif choice == '5':
            print("Exiting department management system.")
            break

        else:
            print("Invalid choice. Please enter a number between 1 and 5.")


department_menu()
